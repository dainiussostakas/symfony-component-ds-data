name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: symfony-component-generator-image:latest
          file: docker/php/Dockerfile
          target: production
          outputs: type=docker,dest=/tmp/symfony-component-generator-image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: symfony-component-generator-image
          path: /tmp/symfony-component-generator-image.tar

  use:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: symfony-component-generator-image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/symfony-component-generator-image.tar
          docker image ls -a
          docker run --d --name symfony-component-generator -it symfony-component-generator-image 
          docker container ls -a
      - name: Composer dependencies install
        run: docker exec -it symfony-component-generator composer install
      - name: PHPStan
        run: docker exec -it symfony-component-generator ./vendor/bin/phpstan analyse src
      - name: PHPCodeSniffer
        run: docker exec -it symfony-component-generator ./vendor/bin/phpcs --standard=PSR12 src
      - name: PHPUnit tests
        run: docker exec -it symfony-component-generator ./vendor/bin/phpunit

#    steps:
#    - uses: actions/checkout@v4
#    - name: Build the Docker image
#      run: docker build . --file docker/php/Dockerfile --target=production --tag symfony-component-generator:$(date +%s)
#    - name: Composer dependencies install
#      run: composer install
#    - name: PHPStan
#      run: ./vendor/bin/phpstan analyse src
#    - name: PHPCodeSniffer
#      run: ./vendor/bin/phpcs --standard=PSR12 src
#    - name: PHPUnit tests
#      run: ./vendor/bin/phpunit

